#include <stdio.h>
#include <stdlib.h>

void longestSubarrayWithSum(int arr[], int n, int targetSum) {
   
    int *hashmap = (int *)malloc((n + 1) * sizeof(int));
    for (int i = 0; i < n + 1; i++) {
        hashmap[i] = -1; // Initialize with an invalid index
    }

    int sum = 0;
    int maxLength = 0;
    int startIndex = -1;
    int endIndex = -1;

    for (int i = 0; i < n; i++) {
        sum += arr[i];

        if (sum == targetSum) {
        
            maxLength = i + 1;
            startIndex = 0;
            endIndex = i;
        } else if (hashmap[sum - targetSum] != -1) {
         
            if (i - hashmap[sum - targetSum] > maxLength) {
                maxLength = i - hashmap[sum - targetSum];
                startIndex = hashmap[sum - targetSum] + 1;
                endIndex = i;
            }
        }

        if (hashmap[sum] == -1) {
        
            hashmap[sum] = i;
        }
    }

    free(hashmap);

    if (maxLength > 0) {
        printf("Longest subarray with sum %d is from index %d to %d\n", targetSum, startIndex, endIndex);
    } else {
        printf("No subarray found with sum %d\n", targetSum);
    }
}

int main() {
    int arr[] = {5, 6, -5, 5, 3, 5, 3, -2, 0}; 
    int n = sizeof(arr) / sizeof(arr[0]);
    int targetSum = 8;

    longestSubarrayWithSum(arr, n, targetSum);

    return 0;
}
